generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Calls from Mango Office
model Call {
  id                   Int       @id @default(autoincrement())
  rk                   String
  city                 String
  avitoName            String?   @map("avito_name")
  phoneClient          String    @map("phone_client")
  phoneAts             String    @map("phone_ats")
  dateCreate           DateTime  @map("date_create")
  operatorId           Int       @map("operator_id")
  status               String
  callId               String?   @unique @map("call_id")
  duration             Int?
  recordUrl            String?   @map("record_url")
  recordingPath        String?   @map("recording_path")
  recordingProcessedAt DateTime? @map("recording_processed_at")
  recordingEmailSent   Boolean   @default(false) @map("recording_email_sent")
  mangoData            Json?     @map("mango_data")
  createdAt            DateTime  @default(now()) @map("created_at")
  updatedAt            DateTime  @updatedAt @map("updated_at")
  
  operator        CallcentreOperator @relation(fields: [operatorId], references: [id])
  phone           Phone?             @relation(fields: [phoneAts], references: [number])
  avito           Avito?             @relation("AvitoCalls", fields: [avitoName], references: [name])
  
  @@map("calls")
  @@index([city])
  @@index([dateCreate])
  @@index([operatorId])
  @@index([phoneClient])
  @@index([phoneAts])
  @@index([avitoName])
  @@index([callId])
}

// Related models
model Order {
  id             Int                @id @default(autoincrement())
  rk             String
  city           String
  avitoName      String?            @map("avito_name")
  phone          String
  typeOrder      String             @map("type_order")
  clientName     String             @map("client_name")
  address        String
  dateMeeting    DateTime           @map("date_meeting")
  typeEquipment  String             @map("type_equipment")
  problem        String
  callRecord     String?            @map("call_record")
  statusOrder    String             @map("status_order")
  masterId       Int?               @map("master_id")
  result         Decimal?           @db.Decimal(10, 2)
  expenditure    Decimal?           @db.Decimal(10, 2)
  clean          Decimal?           @db.Decimal(10, 2)
  masterChange   Decimal?           @map("master_change") @db.Decimal(10, 2)
  bsoDoc         String?            @map("bso_doc")
  expenditureDoc String?            @map("expenditure_doc")
  operatorNameId Int                @map("operator_name_id")
  createDate     DateTime           @map("create_date")
  closingData    DateTime?          @map("closing_data")
  createdAt      DateTime           @default(now()) @map("created_at")
  updatedAt      DateTime           @updatedAt @map("updated_at")
  avitoChatId    String?            @map("avito_chatid")
  callId         String?            @map("call_id")
  prepayment     Decimal?           @db.Decimal(10, 2)
  dateClosmod    DateTime?          @map("date_closmod")
  comment        String?
  cashSubmissionStatus String?      @default("Готово") @map("cash_submission_status")
  cashSubmissionDate   DateTime?    @map("cash_submission_date")
  cashSubmissionAmount Decimal?     @map("cash_submission_amount") @db.Decimal(10, 2)
  cashReceiptDoc       String?      @map("cash_receipt_doc")
  cashApprovedBy       Int?         @map("cash_approved_by")
  cashApprovedDate     DateTime?    @map("cash_approved_date")
  
  @@index([statusOrder, city])
  @@index([closingData])
  @@index([masterId, city, closingData])
  @@index([phone])
  @@index([createDate, city])
  @@index([operatorNameId])
  @@index([createDate])
  @@index([avitoName])
  @@map("orders")
}

model CallcentreOperator {
  id             Int       @id @default(autoincrement())
  name           String
  login          String    @unique
  password       String
  city           String
  status         String
  statusWork     String    @map("status_work")
  passport       String?
  contract       String?
  dateCreate     DateTime  @map("date_create")
  note           String?
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")
  sipAddress     String?   @map("sip_address")
  
  calls          Call[]
  
  @@map("callcentre_operator")
}

model Phone {
  id        Int      @id @default(autoincrement())
  number    String   @unique
  rk        String
  city      String
  avitoName String?  @map("avito_name")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  
  calls     Call[]
  
  @@map("phones")
}

model Avito {
  id                      Int       @id @default(autoincrement())
  name                    String    @unique
  clientId                String    @map("client_id")
  clientSecret            String    @map("client_secret")
  proxyType               String?   @map("proxy_type")
  proxyHost               String?   @map("proxy_host")
  proxyPort               Int?      @map("proxy_port")
  proxyLogin              String?   @map("proxy_login")
  proxyPassword           String?   @map("proxy_password")
  connectionStatus        String?   @default("not_checked") @map("connection_status")
  proxyStatus             String?   @default("not_checked") @map("proxy_status")
  accountBalance          Float?    @default(0) @map("account_balance")
  adsCount                Int?      @default(0) @map("ads_count")
  viewsCount              Int?      @default(0) @map("views_count")
  contactsCount           Int?      @default(0) @map("contacts_count")
  viewsToday              Int?      @default(0) @map("views_today")
  contactsToday           Int?      @default(0) @map("contacts_today")
  lastSyncAt              DateTime? @map("last_sync_at")
  eternalOnlineEnabled    Boolean?  @default(false) @map("eternal_online_enabled")
  isOnline                Boolean?  @default(false) @map("is_online")
  lastOnlineCheck         DateTime? @map("last_online_check")
  onlineKeepAliveInterval Int?      @default(300) @map("online_keep_alive_interval")
  createdAt               DateTime  @default(now()) @map("created_at")
  updatedAt               DateTime  @updatedAt @map("updated_at")
  
  calls                   Call[]    @relation("AvitoCalls")
  
  @@map("avito")
}



